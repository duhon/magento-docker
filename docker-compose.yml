version: '3.7'
services:
  graphql:
    image: node:12.14.1-buster-slim
    command: sh -c './bin/magento-graphql start '
    tty: true
    working_dir: /usr/src/app
    depends_on:
      - app
    volumes:
      - ${MAGENTO_PATH}/graphql:/usr/src/app:${FILE_SYNC}
    environment:
      - MONOLITH_GRAPHQL_URL=http://magento.test/graphql
      - LOG_FILE=/usr/src/app/app.log
      - ENABLE_CATALOG_STOREFRONT=true
      - CATALOG_STOREFRONT_HOST=app
      - CATALOG_STOREFRONT_PORT=9001
    ports:
      - 8008:8008
  web:
    image: nginx:alpine
    hostname: web
    volumes:
      - ${MAGENTO_PATH}:/var/www:${FILE_SYNC}
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/server.crt:/etc/nginx/server.crt
      - ./etc/nginx/server.key:/etc/nginx/server.key
      - ./etc/nginx/fetch_env.js:/etc/nginx/fetch_env.js
    networks:
      default:
        aliases:
          - magento.test
    ports:
      - "${WEB_PORT}:80"
      - "${WEBS_PORT}:443"
    depends_on:
      - app
    #    command: nginx-debug -g 'daemon off;'
    x-hint: uncomment the line above and change error_log in nginx.conf
    x-info: https://devdocs.magento.com/guides/v2.3/install-gde/prereq/nginx.html
  db:
    image: mysql:8
    hostname: db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "magento"
    shm_size: '2gb'
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./etc/mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf
    ports:
      - "${DB_PORT}:3306"
    cap_add:
      - SYS_NICE
    x-hits:
      - bin/magento dev:query-log:enable and watch var/debug/db.log
    x-info: https://devdocs.magento.com/guides/v2.3/install-gde/prereq/mysql.html
  app:
    image: mslabko/php-with-grpc
    # to re-build image with gRPC use the following docker file:
    #    build:
    #      context: .
    #      dockerfile: build/php/fpm-grpc
    hostname: app
    ports:
      - "${SSH_PORT}:22"
      - "9001:9001"
    depends_on:
      - elastic
    stop_signal: SIGKILL
    volumes:
      - ${MAGENTO_PATH}:/var/www:${FILE_SYNC}
      - ./:/var/www/magento-docker:${FILE_SYNC}
#      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      #      - ./etc/php/tideways.ini:/usr/local/etc/php/conf.d/tideways.ini
      #      - ./etc/php/profiler.php:/usr/local/lib/php/header.php
      #      - ./etc/php/append.ini:/usr/local/etc/php/conf.d/append.ini
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./etc/php/tests/functional/phpunit.xml:/var/www/magento2ce/dev/tests/functional/phpunit.xml:rw
      - ./etc/php/tests/functional/config.xml:/var/www/magento2ce/dev/tests/functional/etc/config.xml:rw
      - ./etc/php/tests/acceptance/.env:/var/www/magento2ce/dev/tests/acceptance/.env:rw
      - ./etc/php/tests/integration/install-config-mysql.php:/var/www/magento2ce/dev/tests/integration/etc/install-config-mysql.php:rw
      - ./etc/php/tests/api-functional/install-config-mysql.php:/var/www/magento2ce/dev/tests/api-functional/config/install-config-mysql.php:rw
      - ./etc/php/tests/api-functional/phpunit_rest.xml:/var/www/magento2ce/dev/tests/api-functional/phpunit_rest.xml:rw
      - ./etc/php/tests/api-functional/phpunit_graphql.xml:/var/www/magento2ce/dev/tests/api-functional/phpunit_graphql.xml:rw
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=magento.test
    command: sh -c 'service ssh start; php-fpm -R'
    x-hints:
      - magento reinstall ee
    x-setup:
    x-info: https://devdocs.magento.com/
  app-search:
    image: mslabko/php-with-grpc
    build:
      context: .
      dockerfile: build/php/fpm-grpc
    hostname: app-search
    ports:
      - "${SSH_PORT}:22"
      - "9001:9001"
    stop_signal: SIGKILL
    volumes:
      - ${MAGENTO_PATH}/storefront-search-ce:/var/www/magento2ce:${FILE_SYNC}
      - ./auth.json:/var/www/magento2ce/auth.json
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - .:/var/www/magento-docker
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
    environment:
      COMPOSER_HOME: /var/www/.composer
    command: sh -c "service ssh start; php-fpm -R"
    x-hints:
    x-setup:
    x-info: https://devdocs.magento.com/
  elastic:
    image: elasticsearch:$ELASTICSEARCH_IMAGE_VERSION
    hostname: elastic
    ports:
      - "${ELASTIC_PORT}:9200"
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    x-hits:
      - curl -i http://localhost:9200/_cluster/health
    x-info: https://devdocs.magento.com/guides/v2.3/config-guide/elasticsearch/es-overview.html
  #  mftf:
  #    image: selenium/standalone-chrome-debug:3.12.0
  #    ports:
  #      - "${MFTF_PORT}:5900"
  #    x-hints:
  #      - "vnc://localhost:5900 pass:secret"
  #      - magento prepare_tests
  #      - vendor/bin/mftf run:test
  #    x-info: https://devdocs.magento.com/mftf/docs/introduction.html
  redis:
    image: redis
    hostname: redis
    ports:
      - "${REDIS_PORT}:6379"
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    x-hints:
      - redis-cli monitor
      - telnet localhost 6379
    x-setup:
    x-info: https://devdocs.magento.com/guides/v2.3/config-guide/redis/config-redis.html
  rabbit:
    image: rabbitmq:management
    hostname: rabbitmq
    ports:
      - "${RABBIT_PORT}:15672"
    x-hints:
      - bin/magento queue:consumers:list
      - bin/magento queue:consumers:start
      - "http://localhost:15672/ user:guest pass:guest"
    x-setup:
    x-info: https://devdocs.magento.com/guides/v2.3/config-guide/mq/manage-message-queues.html
#  mail:
#    image: mailhog/mailhog
#    hostname: mail
#    ports:
#      - "1025:1025"
#      - "8025:8025"
# Uncomment after gRPC server executed.
#  grpcui:
#    image: wongnai/grpcui
#    ports:
#      - "8080:8080"
#    volumes:
#      - ${MAGENTO_PATH}:/var/www
# Uncomment following line to use grpcui for catalog-sstorefront
#    entrypoint: ["grpcui", "-plaintext", "-proto", "magento.proto", "-port", "8080", "-bind", "0.0.0.0", "-import-path", "/var/www/magento2ce", "app:9001"]
# Uncomment following line to use grpcui for search-service
#    entrypoint: ["grpcui", "-plaintext", "-proto", "search.proto", "-port", "8080", "-bind", "0.0.0.0", "-import-path", "/var/www/magento2ce", "app-search:9001"]
networks:
  default:
    driver: bridge
